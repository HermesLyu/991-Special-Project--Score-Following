mode = input('Please select mode(1:vol, 2:onset # 3.hold #):');
%read wave
mid = readmidi('k622_I.mid');
mid = onsetwindow(mid, 0, 135, 'sec');
% for i = (1:size(mid, 1))
%     if mid(i, 6) > 135
%         mid1 = mid(1:i-1, :);
%         break
%     end
% end

if mode == 1 %vol
    vol = movewindow(mid,1,1,'sec', 'velocity','mean'); %moving window to get 
    vol_1 = vol(2:length(vol)) - vol(1:length(vol)-1);
% i=1;
% THIS = mid(i, :); %current note
% NEXT = mid(i+1, :); %next note
% while NEXT <> null
%     while NEXT == THIS
%     end
% end
end

if mode == 2 %onset numbers
    i = 1;
    while i<= length(mid)
        nums = find(mid(:, 6)==mid(i, 6)); %find all the notes w/ same onset time as i
        chnums(i, :) = [mid(i, 6), length(nums)];% [time, # of notes]
        i=i+length(nums);
    end
    %chnums = sort(chnums);
    chnums(find(chnums(:, 2) == 0), :) = []; %removing zero rows
    plot(chnums(:, 1), chnums(:, 2))   

    chnums_1 = [chnums(2:length(chnums), 1), chnums(2:length(chnums), 2)-chnums(1:length(chnums)-1, 2)]; %first difference
end

if mode == 3
    chnums = zeros(floor(max(mid(:, 6)/0.025)+1), 2);
    chnums(:,1) = 0:0.025:floor(max(mid(:, 6))/0.025)*0.025;
    for i = 1: length(mid) %all the time index w/ 0.025 step
        onset = floor(mid(i, 6)/0.025)+1; %+1 because matlab index starts at 1
        holdtime = floor(mid(i, 7)/0.025)+1;
        for j = onset:(onset+holdtime) 
            if j <= floor(max(mid(:, 6))/0.025);
            chnums(j,2)  = chnums(j, 2)+1;
            end
        end
    end
    %chnums = sort(chnums);
    %chnums(find(chnums(:, 2) == 0), :) = []; %removing zero rows
    %plot(chnums(:, 1), chnums(:, 2), 'g')   
    %chnums(:, 2) = smooth(chnums(:, 2), 'moving'); %moving average
    chnumsavg = tsmovavg(chnums(:, 2), 's', 30, 1);
    chnumsavg_1 =  chnumsavg(2:length(chnumsavg))-chnumsavg(1:length(chnumsavg)-1);
    chnumsavg_5 =  chnumsavg(6:length(chnumsavg))-chnumsavg(1:length(chnumsavg)-5);
    chnums_1 = [chnums(2:length(chnums), 1), chnums(2:length(chnums), 2)-chnums(1:length(chnums)-1, 2)]; %first difference

    chnumsval = chnums(:, 2);
    %test 
    Pk = zeros(length(chnumsval), 1);
    for t = 2:length(chnumsval)-1
        
            Pk(t) = (chnumsval(t-1) <= chnumsval(t)) && (chnumsval(t+1) < chnumsval(t));
       
    end
    Pkval = Pk.*chnumsval; %peak values
    Pkavg = mean(Pkval(find(Pkval=)); %find average of peaks,  ~isnan ignores NaN
    Pk = Pkval > Pkavg; %save peaks higher than average
    Pkval = Pk.*chnumsval;

    %find valleies
    Val = zeros(length(chnumsval), 1);
    for t = 2:length(chnums)-1
        if  chnums(t-1) > chnums(t) && chnums(t+1) >= chnums(t)
            Val(t) = 1;
        end
    end
    Valval = Val.*chnums; %peak values
    Valavg = mean(Valval(find(Valval))); %find average of peaks
    Val =Val.*(Valval < Valavg); %save peaks higher than average
    Valval = Val.*chnums;

    Allpks = Pkval - Valval; % vallies are negative
    [row,col, pks] = find(Allpks);
    trans = [col; pks*0];
    j = 0;
    for i = 1:length(pks)-1
        if pks(i+1)*pks(i) < 0
            trans(2, i) = abs(pks(i+1))-abs(pks(i)); %transition
            j = j+1;
        end
    end
    trans = trans(:, find(trans(2, :))); %remove zeros from trans

    plot(chnums)
    hold on;
    scatter(find(Pkval), Pkval(find(Pkval)), 'o', 'g') %mark peaks
    scatter(find(Valval), Valval(find(Valval)), 'o', 'r') %mark valleies
    bar(trans(1, :), trans(2, :))
 end
if mode == 4
    chnums = zeros(floor(max(mid(:, 6)/0.025)+1), 2);
    chnums(:,1) = 0:0.025:floor(max(mid(:, 6))/0.025)*0.025;
    for i = 1: length(mid) %all the time index w/ 0.025 step
        onset = floor(mid(i, 6)/0.025)+1; %+1 because matlab index starts at 1
        holdtime = floor(mid(i, 7)/0.025)+1;
        for j = onset:(onset+holdtime) 
            if j <= floor(max(mid(:, 6))/0.025);
            chnums(j,2)  = chnums(j, 2)+1;
            end
        end
    end
    %chnums = sort(chnums);
    %chnums(find(chnums(:, 2) == 0), :) = []; %removing zero rows
    %plot(chnums(:, 1), chnums(:, 2), 'g')   
    %chnums(:, 2) = smooth(chnums(:, 2), 'moving'); %moving average
    chnumsavg = tsmovavg(chnums(:, 2), 's', 30, 1);
    chnumsavg_1 =  chnumsavg(2:length(chnumsavg))-chnumsavg(1:length(chnumsavg)-1);
    chnumsavg_5 =  chnumsavg(6:length(chnumsavg))-chnumsavg(1:length(chnumsavg)-5);
    chnums_1 = [chnums(2:length(chnums), 1), chnums(2:length(chnums), 2)-chnums(1:length(chnums)-1, 2)]; %first difference
end

% step = 0.5*fs; %.5sec step
% for i = (1 : fix(size(wav)/step))
% %    chnumselop(i) = mean(abs(wav((i-1)*step+1:(i*step)))); %take the mean inside steps
%     chnumselop(i) = max(abs(wav((i-1)*step+1:(i*step)))); %take the mean inside steps
% end
% plot(wav, 'g')
% hold on
% plot((1:size(chnumselop, 2))*step, chnumselop)